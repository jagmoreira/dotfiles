# Customize the shell prompt

# get current branch in git repo
__parse_git_branch() {
    # When not using PS1, we must escape the colors with \001 \002
    NC="\001\e[m\002"
    BRANCH=$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/')
    if [ -n "$BRANCH" ]; then
        COLOR=$(__parse_git_status_color)
        # Use printf otherwise colors won't show
        printf " [${COLOR}${BRANCH}${NC}]"
    else
        echo
    fi
}

# get current status of git repo
__parse_git_status_color() {

    # When not using PS1, we must escape the colors with \001 \002
    RED="\001\e[1;31m\002"
    GREEN="\001\e[1;32m\002"
    YELLOW="\001\e[1;33m\002"

    STATUS=$(git status 2> /dev/null | tee)
    if [ -z "$STATUS" ]; then
        echo
        return 0
    fi

    UNSTAGED=$(echo "$STATUS" | grep "Changes not staged for commit:")
    STAGED=$(echo "$STATUS" | grep "Changes to be committed:")
    AHEAD=$(echo "$STATUS" | grep "Your branch is ahead of")

    if [ -n "$UNSTAGED" ]; then
        COLOR=$RED
    elif [ -n "$STAGED" ]; then
        COLOR=$GREEN
    elif [ -n "$AHEAD" ]; then
        COLOR=$YELLOW
    fi

    echo $COLOR
}

set_prompt() {
    # \e, \033 - escape character
    # \b, 007 - bell character
    # In PS1, we must use \[ and \] to escape the colors

    # xterm color codes
    local GRAY='\[\e[1;30m\]'
    local RED='\[\e[1;31m\]'
    local GREEN='\[\e[1;32m\]'
    local YELLOW='\[\e[1;33m\]'
    local BLUE='\[\e[1;34m\]'
    local MAGENTA='\[\e[1;35m\]'
    local CYAN='\[\e[1;36m\]'
    local NC='\[\e[m\]'   # Reset color

    # If connecting via SSH
    if [ -n "$SSH_TTY" ]; then
        local HOST="${MAGENTA}"
    else
        local HOST="${CYAN}"
    fi

    PS1="\[\033]1;\w\007\]"     # ]1; - tab title, \w - fullpath to current dir
    PS1+="\[\033]2;\w\007\]"    # ]2; - window title
    PS1+="${GREEN}\u${NC}"      # \u - username
    PS1+="@${HOST}\h${NC}"      # \h - hostname
    PS1+="\n"
    PS1+="${GRAY}(${NC}\A${GRAY})"  #\ A - 24h time
    PS1+=" ${BLUE}\W${NC}"          # \W - current dir
    PS1+='$(__parse_git_branch)'    # git branch, if available
    PS1+="\$ "
}

set_prompt
unset set_prompt
